{
  "_from": "hexo-generator-json-content",
  "_id": "hexo-generator-json-content@4.1.3",
  "_inBundle": false,
  "_integrity": "sha512-CoH/iIVx+lxnprIZzlTCp4DldU5YGv51WfnLhU4kry1Gi+y0/x1TlEN9IZSIUP939x/DlfunDDMTGopVt+lcpA==",
  "_location": "/hexo-generator-json-content",
  "_phantomChildren": {
    "bluebird": "3.5.5",
    "camel-case": "3.0.0",
    "cross-spawn": "4.0.2",
    "highlight.js": "9.15.8",
    "html-entities": "1.2.1",
    "striptags": "2.2.1"
  },
  "_requested": {
    "escapedName": "hexo-generator-json-content",
    "fetchSpec": "latest",
    "name": "hexo-generator-json-content",
    "raw": "hexo-generator-json-content",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/hexo-generator-json-content/-/hexo-generator-json-content-4.1.3.tgz",
  "_shasum": "02da1bdb9dc295dff4775d8ce6ef2d522a44a076",
  "_spec": "hexo-generator-json-content",
  "_where": "/Users/lixian/blog",
  "author": {
    "email": "git.alexbr@outlook.com",
    "name": "Alex Bruno CÃ¡ceres"
  },
  "bugs": {
    "url": "https://github.com/alexbruno/hexo-generator-json-content/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "hexo-util": "latest",
    "keyword-extractor": "latest",
    "moment": "latest"
  },
  "deprecated": false,
  "description": "Hexo plugin to generate a JSON file with the contents of posts and pages to generic use or consumption, like AJAX site search, Twitter typehead or public content API",
  "devDependencies": {
    "babel-eslint": "^10.0.1",
    "eslint": "^5.14.1",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-standard": "^4.0.0",
    "husky": "^1.3.1",
    "npm-run-all": "^4.1.5",
    "rollup": "^1.4.0",
    "shx": "^0.3.2"
  },
  "esnext": "dist/module.js",
  "homepage": "https://github.com/alexbruno/hexo-generator-json-content",
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint && git add ."
    }
  },
  "keywords": [
    "content",
    "generator",
    "hexo",
    "json",
    "templating"
  ],
  "license": "MIT",
  "main": "dist/main.js",
  "module": "dist/module.js",
  "name": "hexo-generator-json-content",
  "optionalDependencies": {},
  "readme": "# hexo-generator-json-content\n\nHexo (<https://hexo.io/>) plugin to generate a JSON file for generic use or consumption with the contents of posts and pages.\n\nIt's useful to serve compact and agile content data for microservices like AJAX site search, Twitter typeahead or public API.\n\n## News\n\nIt is now possible to:\n\n- Customize the output file name\n- Include drafts on indexed content\n- Skip indexing by tag, besides by category or path\n\n### Breaking change\n\n`ignore` settings are a bit different now. It expects to receive one or two lists: `paths` and `tags`.\n\n## Table of contents\n\n- [hexo-generator-json-content](#hexo-generator-json-content)\n  - [News](#news)\n    - [Breaking change](#breaking-change)\n  - [Table of contents](#table-of-contents)\n  - [Installation](#installation)\n  - [Usage](#usage)\n  - [Settings](#settings)\n    - [Defaults](#defaults)\n    - [Keywords](#keywords)\n    - [Date formats](#date-formats)\n  - [Output](#output)\n    - [Sections](#sections)\n    - [Excluding fields](#excluding-fields)\n    - [Drafts](#drafts)\n    - [Skip indexing](#skip-indexing)\n    - [Custom file name](#custom-file-name)\n\n## Installation\n\n```bash\nnpm i -S hexo-generator-json-content\n```\n\n## Usage\n\nHexo will run the generator _automagically_ when you run `hexo serve` or `hexo generate`. :smirk:\n\nUsing the default settings, the `content.json` file looks like the following structure:\n\n```javascript\nmeta: {\n  title: hexo.config.title,\n  subtitle: hexo.config.subtitle,\n  description: hexo.config.description,\n  author: hexo.config.author,\n  url: hexo.config.url\n},\npages: [{ //-> all pages\n  title: page.title,\n  slug: page.slug,\n  date: page.date,\n  updated: page.updated,\n  comments: page.comments,\n  permalink: page.permalink,\n  path: page.path,\n  excerpt: page.excerpt, //-> only text ;)\n  keywords: null, //-> it needs settings\n  text: page.content, //-> only text minified ;)\n  raw: page.raw, //-> original MD content\n  content: page.content, //-> final HTML content\n  author: page.author\n}],\nposts: [{ //-> only published posts\n  title: post.title,\n  slug: post.slug,\n  date: post.date,\n  updated: post.updated,\n  comments: post.comments,\n  permalink: post.permalink,\n  path: post.path,\n  excerpt: post.excerpt, //-> only text ;)\n  keywords: null, //-> it needs settings\n  text: post.content, //-> only text minified ;)\n  raw: post.raw, //-> original MD content\n  content: post.content, //-> final HTML content\n  author: post.author,\n  categories: [{\n    name: category.name,\n    slug: category.slug,\n    permalink: category.permalink\n  }],\n  tags: [{\n    name: tag.name,\n    slug: tag.slug,\n    permalink: tag.permalink\n  }]\n}]\n```\n\n`hexo.util.stripHTML` is used to get only clean text for `excerpt` and `text` fields.\n\n## Settings\n\nYou can customize settings in `_config.yml`.\n\n### Defaults\n\nDefault settings are:\n\n```yaml\njsonContent:\n  meta: true\n  dafts: false\n  file: content.json\n  keywords: undefined\n  dateFormat: undefined\n  pages:\n    title: true\n    slug: true\n    date: true\n    updated: true\n    comments: true\n    path: true\n    link: true\n    permalink: true\n    excerpt: true\n    keywords: false\n    text: true\n    raw: false\n    content: false\n    author: true\n  posts:\n    title: true\n    slug: true\n    date: true\n    updated: true\n    comments: true\n    path: true\n    link: true\n    permalink: true\n    excerpt: true\n    keywords: false\n    text: true\n    raw: false\n    content: false\n    author: true\n    categories: true\n    tags: true\n```\n\n### Keywords\n\n`keywords` options extracts keywords from excerpt.\n\nSetting the root `keywords` option will automatically reflect to `pages.keywords` and `posts.keywords`. But you can ignore one by setting it to `false` explicitly.\n\nIt is powered by [michaeldelorenzo/keyword-extractor](https://github.com/michaeldelorenzo/keyword-extractor), NPM package to create a keywords array from a string by removing stopwords.\n\nSo, the setting value should be a valid language from its [options parameters](https://github.com/michaeldelorenzo/keyword-extractor#options-parameters).\n\n```yaml\n# exemple\njsonContent:\n  meta: true\n  keywords: french\n```\n\nIf it don't support your language, no worry! It's disabled by default.\n\n### Date formats\n\n`dateFormat` option sets an output format for datetime objects `date` and `updated`.\n\nIt is powered by [moment](https://github.com/moment/moment/), so any string accepted by [format](http://momentjs.com/docs/#/displaying/format/) method can be used.\n\n```yaml\n# exemple\njsonContent:\n  meta: true\n  dateFormat: DD/MM/YYYY\n```\n\nIf not defined, default format is the `JSON.stringify` result for `Date` objects.\n\n## Output\n\n### Sections\n\nBy default, the JSON output includes `meta`, `pages` and `posts` sections. If only one of these sections is enabled by config, the json output will consist of a single array.\n\nFor example, the following config enables only `posts`, showing title, date, path, and text fields:\n\n```yaml\n# exemple\njsonContent:\n  meta: false\n  pages: false\n  posts:\n    title: true\n    date: true\n    path: true\n    text: true\n    raw: false\n    content: false\n    slug: false\n    updated: false\n    comments: false\n    link: false\n    permalink: false\n    excerpt: false\n    categories: false\n    tags: false\n    author: false\n```\n\nThe result JSON will look like this:\n\n```javascript\n[{ //-> only published posts\n  title: post.title,\n  date: post.date,\n  text: post.content, //-> only text minified ;)\n  path: post.path\n}]\n```\n\n### Excluding fields\n\nYou can exclude `meta`, `pages` or `posts` contents from output JSON by setting `meta`, `pages`, or `posts` to `false`.\n\nTo exclude individual fields from `pages` or `posts` output, set its config values to `false`.\n\n### Drafts\n\nBy default, drafts are automatically skipped from indexing.\n\nIf you want to include drafts, set `drafts: true`:\n\n```yaml\n# exemple\njsonContent:\n  drafts: true\n```\n\n### Skip indexing\n\nAny `post` or `page` protected with password will be automatically skipped from indexing.\n\nYou can also exclude a specific `post` or `page` by setting `hidden: true` on front-matter.\n\nTo exclude specific paths or tags, use `ignore` lists. Any path or tag which contains at least one of the listed substrings will be skipped from indexing. For example:\n\n```yaml\n# exemple\njsonContent:\n  ignore:\n    paths:\n      - path/to/a/page\n      - url/to/one/post\n      - an-entire-category\n      - specific.file\n      - .ext # a file extension\n    tags:\n      - tag1\n      - tag2\n```\n\nAlso, you can set `hidden: false` to override all the rules mentioned above.\n\n### Custom file name\n\nBy default, the output file is `content.json`, but is possible to customize the file name:\n\n```yaml\n# exemple\njsonContent:\n  file: custom-file-name.json\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexbruno/hexo-generator-json-content.git"
  },
  "scripts": {
    "clean": "shx rm -rf dist",
    "dist": "run-s dist:*",
    "dist:build": "rollup -c",
    "dist:clean": "npm run clean",
    "dist:lint": "npm run lint",
    "lint": "eslint src --color --fix",
    "major": "npm version major && npm run push",
    "minor": "npm version minor && npm run push",
    "patch": "npm version patch && npm run push",
    "prepare": "npm run dist",
    "push": "git push && git push --tags"
  },
  "version": "4.1.3"
}
