<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>最佳实践 on Lionel's Blog</title><link>https://lixianwa.github.io/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><description>Recent content in 最佳实践 on Lionel's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" />&lt;/a>&lt;br />本作品采用&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a>进行许可。</copyright><lastBuildDate>Thu, 23 Dec 2021 11:17:05 +0800</lastBuildDate><atom:link href="https://lixianwa.github.io/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>Go语言SOLID实践系列一之单一职责原则</title><link>https://lixianwa.github.io/posts/go%E8%AF%AD%E8%A8%80solid%E5%AE%9E%E8%B7%B5%E7%B3%BB%E5%88%97%E4%B8%80%E4%B9%8B%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99/</link><pubDate>Thu, 23 Dec 2021 11:17:05 +0800</pubDate><guid>https://lixianwa.github.io/posts/go%E8%AF%AD%E8%A8%80solid%E5%AE%9E%E8%B7%B5%E7%B3%BB%E5%88%97%E4%B8%80%E4%B9%8B%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99/</guid><description>&lt;h2 id="什么是solid">什么是&lt;code>SOLID&lt;/code>?&lt;/h2>
&lt;p>以下引用wikipedia上的解释：&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>SOLID&lt;/code>指面向对象编程和面向对象设计的五个基本原则。当这些原则被一起应用时，它们使得一个程序员开发一个容易进行软件维护和扩展的系统变得更加可能。&lt;code>SOLID&lt;/code>所包含的原则是通过引发编程者进行软件源代码的代码重构进行软件的代码异味清扫，从而使得软件清晰可读以及可扩展时可以应用的指南。&lt;code>SOLID&lt;/code>被典型的应用在测试驱动开发上，并且是敏捷开发以及自适应软件开发的基本原则的重要组成部分&lt;/p>
&lt;/blockquote></description></item><item><title>Kubernetes最佳实践</title><link>https://lixianwa.github.io/posts/kubernetes%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Wed, 22 Dec 2021 16:22:03 +0800</pubDate><guid>https://lixianwa.github.io/posts/kubernetes%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>&lt;p>容器的使用越来越多，导致对Kubernetes等容器编排平台的需求随之上升。使用容器来打包应用程序，极大地简化了应用程序从开发到生产的部署过程。毫无疑问，Kubernetes作为一个平台协调器，通过引入其深奥的方式，进一步简化了这个过程。&lt;/p>
&lt;p>今天，我想谈谈我在使用Kubernetes时学到的一些好的做法，这些做法可以实现安全部署并推动集群的效率。
那么，让我们开始吧。&lt;/p></description></item></channel></rss>